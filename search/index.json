[{"content":"⚠️ This is just a temporary post that will probably get deleted in the future.\nWhat is htmx To quote the creators of htmx:\nhtmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext\nYou can find more about it here.\nThe application Why? This app was built almost entirely by ChatGPT as part of a test for a school project named PaaSTech. It\u0026rsquo;s a PaaS like Heroku that you can try out there: PaaSTech.cloud\nHow does it work? When you access the application through the browser, it presents a simple webpage with a button and an image of a random cat fetched from \u0026ldquo;The Cat API\u0026rdquo;. You can change the image by simply pressing the button.\nThis application only consists of a few functions and basic standard libraries from Go.\nThe core of this program resides in this catHandler function which is served on \u0026lsquo;/\u0026rsquo;. This function is responsible for serving the main HTML page with a random cat image and a button to fetch a new cat image.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 func catHandler(w http.ResponseWriter, r *http.Request) { cat := Cat{ImageURL: getRandomCatImageURL()} tmpl, err := template.New(\u0026#34;index\u0026#34;).Parse(` \u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Random Cat Generator\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026#34;https://unpkg.com/htmx.org/dist/htmx.js\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Random Cat Generator\u0026lt;/h1\u0026gt; \u0026lt;button id=\u0026#34;change-button\u0026#34; hx-get=\u0026#34;/change\u0026#34; hx-swap=\u0026#34;innerHTML\u0026#34; hx-target=\u0026#34;#cat-image\u0026#34;\u0026gt; Change Cat \u0026lt;/button\u0026gt; \u0026lt;div id=\u0026#34;cat-image\u0026#34;\u0026gt; \u0026lt;img src=\u0026#34;{{.ImageURL}}\u0026#34; alt=\u0026#34;Random Cat\u0026#34; width=\u0026#34;300\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; `) if err != nil { http.Error(w, err.Error(), http.StatusInternalServerError) return } err = tmpl.Execute(w, cat) if err != nil { http.Error(w, err.Error(), http.StatusInternalServerError) } } What\u0026rsquo;s interesting about this snippet are the htmx tags in the html (all the hx-...). Using hx-get, we can directly send a get request to the \u0026lsquo;/change\u0026rsquo; endpoint without needing any fetch, axios, etc. The result of this request is then used to replace the inner HTML of the div below as stated by hx-swap and hx-target. All of this without requiring any additional JavaScript code. The \u0026lsquo;/change\u0026rsquo; endpoint is simply returning a new \u0026lt;img\u0026gt; HTML element with a new image URL fetched from the API.\nThe result Here is what the final result looks like:\nYou can find the entire code for this application in this Github gist.\nCover picture by Xenia Bogarova on Unsplash\n","date":"2023-07-24T14:42:00Z","image":"https://noe-t.dev/posts/creating-a-go-htmx-app/cover_hu62a1417d558feeb818758ca1e2ed2080_709070_120x120_fill_q75_box_smart1.jpg","permalink":"https://noe-t.dev/posts/creating-a-go-htmx-app/","title":"Creating a cat generator website in Go using htmx"}]